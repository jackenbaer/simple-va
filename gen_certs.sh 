#!/bin/bash

set -e

# Directory for certificates
CERT_DIR="./certs"
mkdir -p $CERT_DIR

# Generate the root CA key and certificate
ROOT_KEY="$CERT_DIR/rootCA.key"
ROOT_CERT="$CERT_DIR/rootCA.pem"
ROOT_CONFIG="$CERT_DIR/rootCA.cnf"

cat > $ROOT_CONFIG <<EOF
[req]
default_bits        = 2048
distinguished_name  = req_distinguished_name
x509_extensions     = v3_ca
prompt              = no

[req_distinguished_name]
C  = US
ST = TestState
L  = TestCity
O  = TestOrg
OU = TestUnit
CN = TestRootCA

[v3_ca]
subjectKeyIdentifier = hash
authorityKeyIdentifier = keyid:always,issuer
basicConstraints = critical,CA:TRUE
keyUsage = critical, keyCertSign, cRLSign
EOF

echo "Generating Root CA key and certificate..."
openssl req -x509 -nodes -new -keyout $ROOT_KEY -out $ROOT_CERT -days 3650 -config $ROOT_CONFIG

# Generate a server key and CSR
SERVER_KEY="$CERT_DIR/server.key"
SERVER_CSR="$CERT_DIR/server.csr"
SERVER_CERT="$CERT_DIR/server.crt"
SERVER_CONFIG="$CERT_DIR/server.cnf"

cat > $SERVER_CONFIG <<EOF
[req]
default_bits        = 2048
distinguished_name  = req_distinguished_name
prompt              = no

[req_distinguished_name]
C  = US
ST = TestState
L  = TestCity
O  = TestOrg
OU = TestUnit
CN = localhost
EOF

echo "Generating Server key and CSR..."
openssl req -new -nodes -keyout $SERVER_KEY -out $SERVER_CSR -config $SERVER_CONFIG

# Sign the server certificate with the root CA
echo "Signing Server certificate with Root CA..."
openssl x509 -req -in $SERVER_CSR -CA $ROOT_CERT -CAkey $ROOT_KEY -CAcreateserial -out $SERVER_CERT -days 365

echo "Certificates generated in $CERT_DIR:"
ls -l $CERT_DIR
