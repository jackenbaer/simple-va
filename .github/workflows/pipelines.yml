name: Test simple-va

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"  
  pull_request:
    branches:
      - main

jobs:
  test-endpoint:
    name:  endpoint tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Golang Tests
        run: go test -v

  vulncheck:
    name:  govulncheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: govulncheck
        uses: golang/govulncheck-action@v1
        with:
          go-version-input: '1.23.6'
          go-package: './...'
  
  build:
    name: Build and Inject Version
    needs: [test-endpoint, vulncheck]  
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') 
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.6" 

      - name: Get build metadata
        run: |
          echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "COMMIT=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
          echo "BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

      - name: Build Binary with Version Injection
        run: |
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} \
          go build -ldflags "-X 'main.Version=${{ github.ref_name }}' -X 'main.Commit=${COMMIT}' -X 'main.BuildTime=${BUILD_TIME}'" \
          -o simple-va-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.os == 'windows' && '.exe' || '' }} .

      - name: Upload Built Binary
        uses: actions/upload-artifact@v4
        with:
          name: simple-va-${{ matrix.os }}-${{ matrix.arch }}
          path: ./simple-va-${{ matrix.os }}-${{ matrix.arch }}*

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build]  
    if: startsWith(github.ref, 'refs/tags/')  
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]

    steps:
      - name: Download Built Binary
        uses: actions/download-artifact@v4
        with:
          name: simple-va-${{ matrix.os }}-${{ matrix.arch }}
          path: ./simple-va-${{ matrix.os }}-${{ matrix.arch }}*


      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: simple-va-${{ matrix.os }}-${{ matrix.arch }}
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          draft: false
          prerelease: false